-- [VIII] Sequence : 순차번호 생성기. 대부분 인위적인 PK 사용 용도
DROP SEQUENCE FRIEND_SEQ;
CREATE SEQUENCE FRIEND_SEQ
    START WITH 1 -- 1부터 시작
    INCREMENT BY 1 -- 1씩 증가
    MAXVALUE 9999 -- 최대값
    MINVALUE 1 -- 최소값
    NOCACHE
    NOCYCLE;
SELECT FRIEND_SEQ.NEXTVAL FROM DUAL; -- 다음 순차번호
SELECT FRIEND_SEQ.CURRVAL FROM DUAL; -- 시퀀스의 현재 값
DROP SEQUENCE FRIEND_SQ;
CREATE SEQUENCE FRIEND_SQ MAXVALUE 9999 NOCACHE NOCYCLE;
DROP TABLE FRIEND;
CREATE TABLE FRIEND(
    NUM NUMBER(4) PRIMARY KEY, -- 시퀀스 이용
    NAME VARCHAR2(30) NOT NULL,
    TEL VARCHAR2(20) UNIQUE, -- UNIQUE:유일, NULL 허용
    ADDRESS VARCHAR2(250),
    LAST_MODIFIED DATE DEFAULT SYSDATE -- 최종수정일
);
SELECT * FROM FRIEND;
INSERT INTO FRIEND (NUM, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SQ.NEXTVAL, '홍길동', NULL, '서울시 서대문구'); -- 몇번
SELECT * FROM FRIEND;
-- INSERT INTO FRIEND (NUM, NAME, TEL, ADDRESS)
   -- VALUES (FRIEND_SQ.NEXTVAL, NULL, '010-9999-9999', '서울시 마포구'); -- 에러(NOT NULL)
INSERT INTO FRIEND (NUM, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SQ.NEXTVAL, '김길동', '010-9999-9999', '서울시 마포구');
-- INSERT INTO FRIEND (NUM, NAME, TEL, ADDRESS)
    -- VALUES (FRIEND_SQ.NEXTVAL, '신길동', '010-9999-9999', '서울시 영등포구'); -- 에러(UNIQUE)
INSERT INTO FRIEND (NUM, NAME, TEL, ADDRESS)
    VALUES (FRIEND_SQ.NEXTVAL, '진길동', '010-8888-8888', '수원시 영통구');
SELECT * FROM FRIEND;
    -- ex. 초기값 101부터 최대값 999,999까지 1씩 증가하는 test_seq 시퀀스를 생성하고 시퀀스 수를 사용하시오
CREATE SEQUENCE TEST_SEQ 
    START WITH 101
    MAXVALUE 999999
    NOCACHE
    NOCYCLE;
SELECT TEST_SEQ.NEXTVAL FROM DUAL;
SELECT TEST_SEQ.CURRVAL FROM DUAL;

-- MEMBER && MEMBERLEVEL
DROP TABLE MEMBER;
DROP TABLE MEMBERLEVEL;
DROP SEQUENCE MEMBER_MNO_SQ;
CREATE SEQUENCE MEMBER_MNO_SQ
    MAXVALUE 999999
    NOCACHE
    NOCYCLE;
CREATE TABLE MEMBER_LEVEL (
    LEVELNO NUMBER(1) PRIMARY KEY,
    LEVELNAME VARCHAR2(10) NOT NULL
);
INSERT INTO MEMBER_LEVEL VALUES (-1, 'black');
INSERT INTO MEMBER_LEVEL VALUES (0, '일반');
INSERT INTO MEMBER_LEVEL VALUES (1, '실버');
INSERT INTO MEMBER_LEVEL VALUES (2, '골드');
SELECT * FROM MEMBER_LEVEL;

CREATE TABLE MEMBER (
    mNO NUMBER(1) PRIMARY KEY,
    mNAME VARCHAR2(20) NOT NULL,
    mPW VARCHAR2(15) CHECK(1<=LENGTH(mPW) AND LENGTH(mPW)<=8),
    mEMAIL VARCHAR2(100) UNIQUE,
    mPOINT NUMBER(10) CHECK(mPOINT>=0),
    mRDATE DATE DEFAULT SYSDATE,
    LEVELNO NUMBER(1),
    FOREIGN KEY(LEVELNO) REFERENCES MEMBER_LEVEL(LEVELNO)
);
INSERT INTO MEMBER VALUES (MEMBER_MNO_SQ.NEXTVAL, '홍길동', 'aa', 'hong@hong.com', 0, '22/03/10', 0);
INSERT INTO MEMBER VALUES (MEMBER_MNO_SQ.NEXTVAL, '신길동', 'bb', 'sin@sin.com', 1000, '22/04/01', 1);
SELECT * FROM MEMBER;

SELECT mNO, mNAME, TO_CHAR(mRDATE, 'YYYY-MM-DD') mRDATE, mEMAIL, mPOINT point, LEVELNAME||'고객' levelname
    FROM MEMBER M, MEMBER_LEVEL L
    WHERE M.LEVELNO=L.LEVELNO;




